buildscript {
	dependencies {
		classpath group: "com.gradle", name: "build-scan-plugin", version: "2.0.2"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "latest.release"
		classpath group: "nu.studer", name: "gradle-credentials-plugin", version: "2.1"
	}

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
}

plugins {
	id "de.undercouch.download" version "4.0.0"
	id "org.jetbrains.intellij" version "0.4.16"
}

apply plugin: "com.gradle.build-scan"
apply plugin: "com.liferay.source.formatter"
apply plugin: "java"
apply plugin: "nu.studer.credentials"

sourceSets {
	main {
		java {
			srcDirs = ["src/main/java"]
		}
		resources {
			srcDirs = ["src/main/resources"]
		}
	}
}

task dockerImageBuild(type:Exec)
task dockerPublishRelease(type:Exec)
task downloadBlade(type: Download)
task downloadDtds(type: Download)
task downloadTlds(type: Download)
task downloadXsds(type: Download)
task verifyBlade(type: Verify)

String userHome = System.getProperty("user.home")

String gradleHome = System.getProperty("gradle.user.home") ?: System.getenv("GRADLE_USER_HOME") ?: new File(userHome, ".gradle").absolutePath

File gradleCredentialsProperties = new File(gradleHome, "gradle.credentials.properties")

buildScan {
	termsOfServiceUrl = "https://gradle.com/terms-of-service"
	termsOfServiceAgree = "yes"
}

check.dependsOn checkSourceFormatting

checkSourceFormatting {
	maxLineLength = 120
}

dependencies {
	compile group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.4.0"
	compile group: "commons-configuration", name: "commons-configuration", version: "1.10"
	compile group: "org.apache.ant", name: "ant", version: "1.10.1"
	compile group: "org.dom4j", name: "dom4j", version: "2.1.0"
	compile group: "org.osgi", name: "org.osgi.core", version: "6.0.0"

	testCompile group: "junit", name: "junit", version: "4.12"
}

dockerImageBuild {
	List<String> args = ['docker', 'build', '--tag', 'liferay-intellij-plugin-build', '.']

	commandLine args
}

dockerPublishRelease {
	dependsOn dockerImageBuild

	buildSearchableOptions.enabled = false

	List<String> args = ['docker', 'run', '--rm', '--init', '-v', "${userHome}/.gradle/wrapper:/root/.gradle/wrapper"]

	if (gradleCredentialsProperties.exists()) {
		args.addAll(['-v', "${userHome}/.gradle/gradle.credentials.properties:/root/.gradle/gradle.encrypted.properties"])
	}

	args.addAll(['liferay-intellij-plugin-build'])

	commandLine args
}

downloadBlade {
	src bladeLatestDownloadURL
	dest "build/resources/main/libs/blade.jar"
	onlyIfModified true
}

downloadDtds {
	def target = file("src/main/resources/definitions/dtd")

	target.mkdirs()

	src([
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-display_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-display_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-display_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-friendly-url-routes_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-friendly-url-routes_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-friendly-url-routes_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-hook_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-hook_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-hook_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-layout-templates_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-layout-templates_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-layout-templates_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-look-and-feel_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-look-and-feel_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-look-and-feel_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-package_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-package_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-package_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-repository_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-repository_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-plugin-repository_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-portlet-app_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-portlet-app_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-portlet-app_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-resource-action-mapping_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-resource-action-mapping_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-resource-action-mapping_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-service-builder_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-service-builder_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-service-builder_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-social_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-social_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-social_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-theme-loader_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-theme-loader_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-theme-loader_7_2_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-user-notification-definitions_7_0_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-user-notification-definitions_7_1_0.dtd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-user-notification-definitions_7_2_0.dtd"
		])

	dest target
	overwrite false
}

downloadTlds {
	def target = file("src/main/resources/definitions/tld")

	target.mkdirs()

	src([
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/util-taglib/src/META-INF/liferay-aui.tld",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/util-taglib/src/META-INF/liferay-ui.tld"
		])

	dest target
	overwrite false
}

downloadXsds {
	def target = file("src/main/resources/definitions/xsd")

	target.mkdirs()

	src([
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-workflow-definition_7_0_0.xsd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-workflow-definition_7_1_0.xsd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/liferay-workflow-definition_7_2_0.xsd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/portlet-app_2_0.xsd",
			"https://raw.githubusercontent.com/liferay/liferay-portal/master/definitions/portlet-app_3_0.xsd"
		])

	dest target
	overwrite false
}

formatSource {
	maxLineLength = 120
}

intellij {
	plugins "java", "CSS", "DatabaseTools", "gradle", "Groovy", "java-i18n", "JavaEE", "JavaScriptLanguage", "jsp", "junit", "maven", "PersistenceSupport", "properties", "sass"
	pluginName "liferay-intellij-plugin"
	version "IU-2019.2.3"
}

patchPluginXml {
	sinceBuild "192"
	untilBuild ""
}

processResources {
	dependsOn verifyBlade
}

def marketplaceKey = credentials.marketplaceKey ?: ""

publishPlugin {
	token marketplaceKey
}

repositories {
	maven {
		url "https://repository-cdn.liferay.com/nexus/content/groups/public"
	}
}

runIde {
	jvmArgs = [ "-Xmx2048m", "--add-exports=java.base/jdk.internal.vm=ALL-UNNAMED" ]
}

test {
	testLogging {
		exceptionFormat = "full"
	}
}

verifyBlade {
	dependsOn downloadBlade
	src "build/resources/main/libs/blade.jar"
	algorithm "MD5"
	checksum bladeLatestMD5
}

version = "1.7.0"